"use strict";
const options = {
    name: 'test',
    width: 1024,
    height: 1024,
    colors: {
        border: 'black',
        bg: 'red'
    },
    // это метод который мы создали вручную и создает ключ который называеться makeTest
    makeTest: function() {
        console.log('Test');
    }
};

options.makeTest();

// деструктуризация обьектов!!!!
// во внутрь мы помещаем переменные которые мы хотим вытащить {}, и помещаем структуру из которой хотим вытащить переменные
const {border,bg} = options.colors;
console.log(border);

// этот метод берет наш обьекти на его основание создает массив в котором все элементы это ключинаходящейся на первой части пары ключ значение обьекта
// console.log(Object.keys(options).length)



// если мы хотим достучаться до какого то свойство мы должны написать точку или []
// console.log(options.colors.bg);

// но если нам необходимо удалить какое нибудь свойство (пару ключ:значение) прямо из обьекта

// delete options.name;
// console.log(options);

// мы не знает что за свойство может там лежать и поэтому мы должны назваить общим свойством
// что бы перебрать все свойство обькта мы можем воспользоваться такой конструкцией которая называеться for in, это значит что мы будем копаться внутри options

// прием счетчика
// let counter = 0;
// for (let key in options) {
//     if (typeof(options[key]) === 'object') {
//         for (let i in options[key]) {
//             // мы сейчас перебераем i это будут обьекты как border, bg
//                                                 // дальше у нас идет двойной доступ    
//                                                 // для того что бы достучаться до элементов внутри мы можем написать еще одни []
//             console.log(`Свойство ${i} имеет значение ${options[key][i]}`);
// как перебрать все свойство обьекта если их ключи вы уже знаетея
//             counter++;
//         }
//     } else {
//         console.log(`Свойство ${key} имеет значение ${options[key]}`);
//         counter++;
//     }
//     // что бы указать что за значение находиться внутри свойство key
// }
// console.log(counter);
